!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.pmz=t()}}(function(){return function t(n,e,r){function o(s,a){if(!e[s]){if(!n[s]){var u="function"==typeof require&&require;if(!a&&u)return u(s,!0);if(i)return i(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var f=e[s]={exports:{}};n[s][0].call(f.exports,function(t){var e=n[s][1][t];return o(e?e:t)},f,f.exports,t,n,e,r)}return e[s].exports}for(var i="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({1:[function(t,n,e){"use strict";var r=t("./model/model");e.PmzModel=r.PmzModel;var o=t("./storage/model-file");e.PmzFile=o.PmzFile},{"./model/model":4,"./storage/model-file":14}],2:[function(t,n,e){"use strict";var r=function(){function t(t){this.c=t}return t}();e.PmzColor=r},{}],3:[function(t,n,e){"use strict";var r=function(){function t(t,n,e,r,o,i,s){this.name=t,this.cityName=n,this.countryName=e,this.version=r,this.description=o,this.comment=i,this.delays=s}return t}();e.PmzMetadata=r},{}],4:[function(t,n,e){"use strict";var r=t("./metadata"),o=t("./transport"),i=t("./scheme"),s=function(){function t(t){this.metadata=t,this.transports=[],this.schemes=[]}return t.create=function(){var n=new t(new r.PmzMetadata("Unknown",null,null,"1.0.0",null,null,null));return n.addTransport("Metro.trp",o.PmzTransportType.Metro),n.addScheme("Metro.map"),n},t.prototype.getMetadata=function(){return this.metadata},t.prototype.getSchemes=function(){return this.schemes.map(function(t){return t.name})},t.prototype.addScheme=function(t,n,e){void 0===n&&(n=null),void 0===e&&(e=null),this.schemes.push(new i.PmzScheme(t,t,n||{},e||[]))},t.prototype.removeScheme=function(t){this.schemes.splice(this.schemes.indexOf(this.getScheme(t)))},t.prototype.getScheme=function(t){var n=this.schemes.filter(function(n){return n.name===t});if(n)return n[0];throw new Error("Scheme "+t+" not found")},t.prototype.getTransports=function(){return this.transports.map(function(t){return t.name})},t.prototype.addTransport=function(t,n,e,r){void 0===e&&(e=null),void 0===r&&(r=null),this.transports.push(new o.PmzTransport(t,t,n,e||{},r||{}))},t.prototype.removeTransport=function(t){this.transports.splice(this.transports.indexOf(this.getTransport(t)))},t.prototype.getTransport=function(t){var n=this.transports.filter(function(n){return n.name===t});if(n)return n[0];throw new Error("Transport "+t+" not found")},t}();e.PmzModel=s},{"./metadata":3,"./scheme":8,"./transport":11}],5:[function(t,n,e){"use strict";var r=function(){function t(t,n){this.x=t,this.y=n}return t.prototype.isEmpty=function(){return 0===this.x&&0===this.y},t}();e.PmzPoint=r},{}],6:[function(t,n,e){"use strict";var r=function(){function t(t,n,e,r){this.x=t,this.y=n,this.width=e,this.height=r}return t.prototype.isEmpty=function(){return 0===this.x&&0===this.y&&0===this.width&&0===this.height},t}();e.PmzRect=r},{}],7:[function(t,n,e){"use strict";var r=function(){function t(t,n,e,r,o,i,s,a,u,c,f,l){this.id=t,this.name=n,this.color=e,this.labelColor=r,this.labelBackgroundColor=o,this.coords=i,this.rects=s,this.heights=a,this.rect=u,this.rects2=c,this.splines=f,this.visible=l}return t}();e.PmzSchemeLine=r},{}],8:[function(t,n,e){"use strict";var r=function(){function t(t,n,e,r){this.id=t,this.name=n,this.options=e,this.lines=r}return t}();e.PmzScheme=r},{}],9:[function(t,n,e){"use strict";var r=function(){function t(t,n,e,r,o){return this.line=t,this.src=n,this.dst=e,this.points=r,this.isSmooth=o,this}return t}();e.PmzSpline=r},{}],10:[function(t,n,e){"use strict";var r=function(){function t(t,n){return this.minutes=t,this.seconds=n,this}return t}();e.PmzTime=r},{}],11:[function(t,n,e){"use strict";!function(t){t[t.Metro=0]="Metro",t[t.Bus=1]="Bus"}(e.PmzTransportType||(e.PmzTransportType={}));var r=(e.PmzTransportType,function(){function t(t,n,e,r,o){this.id=t,this.name=n,this.type=e,this.lines=r,this.transfers=o}return t}());e.PmzTransport=r},{}],12:[function(t,n,e){"use strict";function r(t){var n=[];return Object.keys(t).forEach(function(e){n.push("["+e+"]"),Object.keys(t[e]).forEach(function(r){var o=t[e][r];if(o instanceof Array)for(var i=0;i<o.length;i++)n.push(r+"="+o[i]);else n.push(r+"="+o)})}),n.reduce(function(t,n){return t+"\n"+n})}function o(t){var n={section:/^\s*\[\s*([^\]]*)\s*\]\s*$/,param:/^\s*([\w\.\-\_]+)\s*=\s*(.*?)\s*$/,comment:/^\s*;.*$/},e={},r=t.split(/\r\n|\r|\n/),o=null;return r.forEach(function(t){if(!n.comment.test(t))if(n.param.test(t)){var r=t.match(n.param);if(o){var i=e[o][r[1]];i?"string"==typeof i?e[o][r[1]]=[i,r[2]]:e[o][r[1]].push(r[2]):e[o][r[1]]=r[2]}else e[r[1]]=r[2]}else if(n.section.test(t)){var r=t.match(n.section);e[r[1]]={},o=r[1]}else 0==t.length&&o&&(o=null)}),e}e.formatIniText=r,e.parseIniText=o},{}],13:[function(t,n,e){"use strict";function r(t){var n=t.Options,e=(n.DelayNames||"").split("\n");return new i.PmzMetadata(n.Name,n.CityName,n.Country,n.NeedVersion,n.MapAuthors.reduce(function(t,n){return t+"\n"+n}),n.Comment,e)}function o(t){var n={Options:{Name:t.name,CityName:t.cityName||"Unknown",Country:t.countryName||"Unknown",NeedVersion:t.version||"1.0.0",MapAuthors:(t.description||"").split("\n")}};return t.comment&&(n.Options.Comment=t.comment),t.delays&&(n.Options.DelayNames=t.delays.reduce(function(t,n){return t+","+n})),n}var i=t("../model/metadata");e.load=r,e.save=o},{"../model/metadata":3}],14:[function(t,n,e){(function(n){"use strict";function r(t,n){return t?-1!==t.indexOf(n,t.length-n.length):!1}function o(t,n,e){for(var o in t.files){var i=t.files[o];if(r(o,n)&&e(o,i))return}}function i(t,n,e){o(t,n,function(t,n){return e(t,m.parseIniText(u.decodeWindows1251(n.asUint8Array())))})}function s(t){if(-1==["application/x-zip-compressed","application/zip"].indexOf(t.type))throw new TypeError("Invalid file type "+t.type+" for PMZ map");var n=new a(t.content);return o(n,".pmz",function(t,e){return n=new a(e.asArrayBuffer()),!0}),n}var a="undefined"!=typeof window?window.JSZip:"undefined"!=typeof n?n.JSZip:null,u=t("./utils"),c=t("./metadata-file"),f=t("./transport-file"),l=t("./scheme-file"),m=t("./ini-file"),p=t("../model/model"),d=function(){function t(){}return t.load=function(t){var n=s(t),e=null;if(i(n,".cty",function(t,n){e=new p.PmzModel(c.load(n))}),!e)throw new TypeError("Invalid file format");return i(n,".trp",function(t,n){var r=f.load(n,t,e.getMetadata());e.addTransport(r.name,r.options,r.lines,r.transfers)}),i(n,".map",function(t,n){var r=l.load(n,t,e);e.addScheme(r.name,r.options,r.lines)}),e},t.save=function(t,n){var e=s(t),r=c.save(n.metadata),o=m.formatIniText(r),i=u.encodeWindows1251(o);e.file(n.metadata.name+".cty",i),t.content=e.generate({type:"arraybuffer"})},t}();e.PmzFile=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../model/model":4,"./ini-file":12,"./metadata-file":13,"./scheme-file":15,"./transport-file":16,"./utils":17}],15:[function(t,n,e){"use strict";function r(t){return t?{imageFileName:t.ImageFileName,stationDiameter:t.StationDiameter,lineWidth:t.LinesWidth,upperCase:t.UpperCase,wordWrap:t.WordWrap,isVector:t.IsVector,transports:l.asArray(t.Transports),checkedTransports:l.asArray(t.CheckedTransports)}:{}}function o(t){if(!t)return{};var n={};for(var e in t){var r=t[e],o=l.asPmzSpline(r);n[o.line]||(n[o.line]=[]),n[o.line].push(o)}return n}function i(t,n){var e=[];for(var r in t){var o=t[r];e.push(new f.PmzSchemeLine(r,r,l.asPmzColor(o.Color),o.LabelsColor,o.LabelsBColor,l.asPmzPointArray(o.Coordinates),l.asPmzRectArray(o.Rects),l.asFloatArray(o.Heights),l.asPmzRect(o.Rect),l.asPmzRectArray(o.Rects2),n[r],!0))}return e}function s(t,n){var e=[];n.getTransports().forEach(function(t){Array.prototype.push.apply(e,Object.keys(n.getTransport(t).lines))});var r={};for(var o in t)-1!==e.indexOf(o)&&(r[o]=t[o]);return r}function a(t,n,e){var a=r(t.Options),u=o(t.AdditionalNodes),f=i(s(t,e),u);return new c.PmzScheme(n,n,a,f)}function u(){throw new TypeError("Not implemented")}var c=t("../model/scheme"),f=t("../model/scheme-line"),l=t("./utils");e.load=a,e.save=u},{"../model/scheme":8,"../model/scheme-line":7,"./utils":17}],16:[function(t,n,e){"use strict";function r(t){return c.PmzTransportType.Metro}function o(t,n){var e={};for(var r in n){var o=n[r],i={};if(o.Delays)for(var s=o.Delays.split(","),a=0;a<t.length;a++)i[t[a]]=s[a];o.DelayDay&&(i.Day=o.DelayDay),o.DelayNight&&(i.Night=o.DelayNight),e[o.Name]={sectionName:r,lineMap:o.LineMap,stations:o.Stations,driving:o.Driving,delays:i}}return e}function i(t){return t}function s(t){var n={};for(var e in t)-1===["Options","Transfers","AdditionalInfo"].indexOf(e)&&(n[e]=t[e]);return n}function a(t,n,e){return new c.PmzTransport(n,n,r(t.Options||{}),o(e.delays,s(t)),i(t.Transfers||{}))}function u(){throw new TypeError("Not implemented")}var c=t("../model/transport");e.load=a,e.save=u},{"../model/transport":11}],17:[function(t,n,e){(function(n){"use strict";function r(t){return t&&"?"!==t?parseInt(t):null}function o(t){return t?t.split(",").map(function(t){return"?"===t?null:t}):[]}function i(t){return o(t).map(function(t){return t?parseInt(t):null})}function s(t){return o(t).map(function(t){return t?parseFloat(t):null})}function a(t){for(var n=i(t),e=[],r=0;r<n.length-1;r+=2)e.push(new v.PmzPoint(n[r],n[r+1]));return e}function u(t){for(var n=i(t),e=[],r=0;r<n.length-3;r+=2)e.push(new w.PmzRect(n[r],n[r+1],n[r+2],n[r+3]));return e}function c(t){var n=i(t);return new v.PmzPoint(n[0],n[1])}function f(t){var n=i(t);return new w.PmzRect(n[0],n[1],n[2],n[3])}function l(t){for(var n=o(t),e=n[0],r=n[1],i=n[2],s=n.length%2===0,a=[],u=3;u<n.length-1;u+=2)a.push(new v.PmzPoint(parseInt(n[u]),parseInt(n[u+1])));return new g.PmzSpline(e,r,i,a,s)}function m(t){if(!t||!t.length)return null;var n=t.split(".");return new P.PmzTime(r(n[0]),2===n.length?r(n[1]):null)}function p(t){return t&&t.length?new z.PmzColor(r(t)):null}function d(t){var n="";return t.forEach(function(t){n+=String.fromCharCode(t)}),y.decode(n,{mode:"fatal"})}function h(t){for(var n=y.encode(t),e=new Uint8Array(n.length),r=0;r<n.length;r++)e[r]=n.charCodeAt(r);return e}var y="undefined"!=typeof window?window.windows1251:"undefined"!=typeof n?n.windows1251:null,v=t("../model/point"),w=t("../model/rect"),P=t("../model/time"),z=t("../model/color"),g=t("../model/spline"),T={DEFAULT_MAP_NAME:"Metro.map",DEFAULT_TRP_NAME:"Metro.trp",DEFAULT_LINE_COLOR:"black"};e.constants=T,e.asArray=o,e.asIntArray=i,e.asFloatArray=s,e.asPmzPointArray=a,e.asPmzRectArray=u,e.asPmzPoint=c,e.asPmzRect=f,e.asPmzSpline=l,e.asPmzTime=m,e.asPmzColor=p,e.decodeWindows1251=d,e.encodeWindows1251=h}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../model/color":2,"../model/point":5,"../model/rect":6,"../model/spline":9,"../model/time":10}]},{},[1])(1)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBtei1saWIuanMiXSwibmFtZXMiOlsiZiIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJnIiwid2luZG93IiwiZ2xvYmFsIiwic2VsZiIsInRoaXMiLCJwbXoiLCJlIiwidCIsIm4iLCJyIiwicyIsIm8iLCJ1IiwiYSIsInJlcXVpcmUiLCJpIiwiRXJyb3IiLCJjb2RlIiwibCIsImNhbGwiLCJsZW5ndGgiLDEsIm1vZGVsXzEiLCJQbXpNb2RlbCIsIm1vZGVsX2ZpbGVfMSIsIlBtekZpbGUiLCIuL21vZGVsL21vZGVsIiwiLi9zdG9yYWdlL21vZGVsLWZpbGUiLDIsIlBtekNvbG9yIiwiYyIsMywiUG16TWV0YWRhdGEiLCJuYW1lIiwiY2l0eU5hbWUiLCJjb3VudHJ5TmFtZSIsInZlcnNpb24iLCJkZXNjcmlwdGlvbiIsImNvbW1lbnQiLCJkZWxheXMiLDQsIm1ldGFkYXRhXzEiLCJ0cmFuc3BvcnRfMSIsInNjaGVtZV8xIiwibWV0YWRhdGEiLCJ0cmFuc3BvcnRzIiwic2NoZW1lcyIsImNyZWF0ZSIsIm1vZGVsIiwiYWRkVHJhbnNwb3J0IiwiUG16VHJhbnNwb3J0VHlwZSIsIk1ldHJvIiwiYWRkU2NoZW1lIiwicHJvdG90eXBlIiwiZ2V0TWV0YWRhdGEiLCJnZXRTY2hlbWVzIiwibWFwIiwib3B0aW9ucyIsImxpbmVzIiwicHVzaCIsIlBtelNjaGVtZSIsInJlbW92ZVNjaGVtZSIsInNwbGljZSIsImluZGV4T2YiLCJnZXRTY2hlbWUiLCJpdGVtcyIsImZpbHRlciIsImdldFRyYW5zcG9ydHMiLCJ0eXBlIiwidHJhbnNmZXJzIiwiUG16VHJhbnNwb3J0IiwicmVtb3ZlVHJhbnNwb3J0IiwiZ2V0VHJhbnNwb3J0IiwiLi9tZXRhZGF0YSIsIi4vc2NoZW1lIiwiLi90cmFuc3BvcnQiLDUsIlBtelBvaW50IiwieCIsInkiLCJpc0VtcHR5Iiw2LCJQbXpSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLDcsIlBtelNjaGVtZUxpbmUiLCJpZCIsImNvbG9yIiwibGFiZWxDb2xvciIsImxhYmVsQmFja2dyb3VuZENvbG9yIiwiY29vcmRzIiwicmVjdHMiLCJoZWlnaHRzIiwicmVjdCIsInJlY3RzMiIsInNwbGluZXMiLCJ2aXNpYmxlIiw4LDksIlBtelNwbGluZSIsImxpbmUiLCJzcmMiLCJkc3QiLCJwb2ludHMiLCJpc1Ntb290aCIsMTAsIlBtelRpbWUiLCJtaW51dGVzIiwic2Vjb25kcyIsMTEsMTIsImZvcm1hdEluaVRleHQiLCJpbmkiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsInNlY3Rpb25LZXkiLCJ2YWx1ZUtleSIsInZhbHVlIiwiQXJyYXkiLCJyZWR1Y2UiLCJwYXJzZUluaVRleHQiLCJ0ZXh0IiwicmVnZXgiLCJzZWN0aW9uIiwicGFyYW0iLCJzcGxpdCIsInRlc3QiLCJtYXRjaCIsImN1cnJlbnRWYWx1ZSIsMTMsImxvYWQiLCJPcHRpb25zIiwiZGVsYXlOYW1lcyIsIk5hbWUiLCJDaXR5TmFtZSIsIkNvdW50cnkiLCJOZWVkVmVyc2lvbiIsIk1hcEF1dGhvcnMiLCJzYXZlIiwiQ29tbWVudCIsIkRlbGF5TmFtZXMiLCIuLi9tb2RlbC9tZXRhZGF0YSIsMTQsImVuZHNXaXRoIiwic3VmZml4IiwiZW51bWVyYXRlRW50cmllcyIsInppcCIsImV4dCIsImNhbGxiYWNrIiwiZW50cnlOYW1lIiwiZmlsZXMiLCJ6aXBFbnRyeSIsImVudW1lcmF0ZUluaUVudHJpZXMiLCJlbnRyeSIsIkluaUZpbGUiLCJQbXpVdGlscyIsImRlY29kZVdpbmRvd3MxMjUxIiwiYXNVaW50OEFycmF5Iiwib3BlblppcCIsImZpbGUiLCJUeXBlRXJyb3IiLCJKU1ppcCIsImNvbnRlbnQiLCJhc0FycmF5QnVmZmVyIiwiUG16TWV0YWRhdGFGaWxlIiwiUG16VHJhbnNwb3J0RmlsZSIsIlBtelNjaGVtZUZpbGUiLCJ0cmFuc3BvcnQiLCJzY2hlbWUiLCJtZXRhSW5pIiwibWV0YVRleHQiLCJtZXRhRW5jb2RlZCIsImVuY29kZVdpbmRvd3MxMjUxIiwiZ2VuZXJhdGUiLCIuLi9tb2RlbC9tb2RlbCIsIi4vaW5pLWZpbGUiLCIuL21ldGFkYXRhLWZpbGUiLCIuL3NjaGVtZS1maWxlIiwiLi90cmFuc3BvcnQtZmlsZSIsIi4vdXRpbHMiLDE1LCJsb2FkTWFwT3B0aW9ucyIsImltYWdlRmlsZU5hbWUiLCJzdGF0aW9uRGlhbWV0ZXIiLCJsaW5lV2lkdGgiLCJ1cHBlckNhc2UiLCJ3b3JkV3JhcCIsImlzVmVjdG9yIiwiYXNBcnJheSIsImNoZWNrZWRUcmFuc3BvcnRzIiwibG9hZFNwbGluZXMiLCJsaW5lTm9kZXMiLCJrZXkiLCJpdGVtIiwic3BsaW5lIiwiYXNQbXpTcGxpbmUiLCJsb2FkTWFwTGluZXMiLCJzY2hlbWVfbGluZV8xIiwiYXNQbXpDb2xvciIsImFzUG16UG9pbnRBcnJheSIsImFzUG16UmVjdEFycmF5IiwiYXNGbG9hdEFycmF5IiwiYXNQbXpSZWN0IiwiZmlsdGVyTGluZVNlY3Rpb25zIiwibGluZU5hbWVzIiwiYXBwbHkiLCJzZWN0aW9ucyIsIi4uL21vZGVsL3NjaGVtZSIsIi4uL21vZGVsL3NjaGVtZS1saW5lIiwxNiwibG9hZFRycE9wdGlvbnMiLCJsb2FkVHJwTGluZXMiLCJjaXR5RGVsYXlzIiwiZGVsYXlWYWx1ZXMiLCJEZWxheXMiLCJEZWxheURheSIsIkRlbGF5TmlnaHQiLCJzZWN0aW9uTmFtZSIsImxpbmVNYXAiLCJzdGF0aW9ucyIsImRyaXZpbmciLCJsb2FkVHJwVHJhbnNmZXJzIiwiZmlsdGVyVHJwTGluZVNlY3Rpb25zIiwiLi4vbW9kZWwvdHJhbnNwb3J0IiwxNywiYXNJbnQiLCJwYXJzZUludCIsImFzSW50QXJyYXkiLCJwYXJzZUZsb2F0IiwidmFsdWVzIiwicG9pbnRfMSIsInJlY3RfMSIsImFzUG16UG9pbnQiLCJwYXJ0cyIsImlzU3BsaW5lIiwic3BsaW5lXzEiLCJhc1BtelRpbWUiLCJ0aW1lXzEiLCJjb2xvcl8xIiwiYnVmZmVyIiwiYnl0ZVN0cmluZyIsImIiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJ3aW5kb3dzMTI1MSIsImRlY29kZSIsIm1vZGUiLCJhc2NpaUVuY29kZWRUZXh0IiwiZW5jb2RlIiwiVWludDhBcnJheSIsImNoYXJDb2RlQXQiLCJjb25zdGFudHMiLCJERUZBVUxUX01BUF9OQU1FIiwiREVGQVVMVF9UUlBfTkFNRSIsIkRFRkFVTFRfTElORV9DT0xPUiIsIi4uL21vZGVsL2NvbG9yIiwiLi4vbW9kZWwvcG9pbnQiLCIuLi9tb2RlbC9yZWN0IiwiLi4vbW9kZWwvc3BsaW5lIiwiLi4vbW9kZWwvdGltZSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBVUEsR0FBRyxHQUFvQixnQkFBVkMsVUFBb0MsbUJBQVRDLFFBQXNCQSxPQUFPRCxRQUFRRCxRQUFTLElBQW1CLGtCQUFURyxTQUFxQkEsT0FBT0MsSUFBS0QsVUFBVUgsT0FBTyxDQUFDLEdBQUlLLEVBQWtDQSxHQUFiLG1CQUFUQyxRQUF3QkEsT0FBK0IsbUJBQVRDLFFBQXdCQSxPQUE2QixtQkFBUEMsTUFBc0JBLEtBQVlDLEtBQUtKLEVBQUVLLElBQU1WLE1BQU8sV0FBcUMsTUFBTyxTQUFVVyxHQUFFQyxFQUFFQyxFQUFFQyxHQUFHLFFBQVNDLEdBQUVDLEVBQUVDLEdBQUcsSUFBSUosRUFBRUcsR0FBRyxDQUFDLElBQUlKLEVBQUVJLEdBQUcsQ0FBQyxHQUFJRSxHQUFrQixrQkFBVEMsVUFBcUJBLE9BQVEsS0FBSUYsR0FBR0MsRUFBRSxNQUFPQSxHQUFFRixHQUFFLEVBQUksSUFBR0ksRUFBRSxNQUFPQSxHQUFFSixHQUFFLEVBQUksSUFBSWhCLEdBQUUsR0FBSXFCLE9BQU0sdUJBQXVCTCxFQUFFLElBQUssTUFBTWhCLEdBQUVzQixLQUFLLG1CQUFtQnRCLEVBQUUsR0FBSXVCLEdBQUVWLEVBQUVHLElBQUlmLFdBQVlXLEdBQUVJLEdBQUcsR0FBR1EsS0FBS0QsRUFBRXRCLFFBQVEsU0FBU1UsR0FBRyxHQUFJRSxHQUFFRCxFQUFFSSxHQUFHLEdBQUdMLEVBQUcsT0FBT0ksR0FBRUYsRUFBRUEsRUFBRUYsSUFBSVksRUFBRUEsRUFBRXRCLFFB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QkFBa0IsRUFBRUMsZ0JBQWdCLFVBQVUsSUFBSSIsImZpbGUiOiJwbXotbGliLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbihmKXtpZih0eXBlb2YgZXhwb3J0cz09PVwib2JqZWN0XCImJnR5cGVvZiBtb2R1bGUhPT1cInVuZGVmaW5lZFwiKXttb2R1bGUuZXhwb3J0cz1mKCl9ZWxzZSBpZih0eXBlb2YgZGVmaW5lPT09XCJmdW5jdGlvblwiJiZkZWZpbmUuYW1kKXtkZWZpbmUoW10sZil9ZWxzZXt2YXIgZztpZih0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIil7Zz1nbG9iYWx9ZWxzZSBpZih0eXBlb2Ygc2VsZiE9PVwidW5kZWZpbmVkXCIpe2c9c2VsZn1lbHNle2c9dGhpc31nLnBteiA9IGYoKX19KShmdW5jdGlvbigpe3ZhciBkZWZpbmUsbW9kdWxlLGV4cG9ydHM7cmV0dXJuIChmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xudmFyIG1vZGVsXzEgPSByZXF1aXJlKFwiLi9tb2RlbC9tb2RlbFwiKTtcbmV4cG9ydHMuUG16TW9kZWwgPSBtb2RlbF8xLlBtek1vZGVsO1xudmFyIG1vZGVsX2ZpbGVfMSA9IHJlcXVpcmUoXCIuL3N0b3JhZ2UvbW9kZWwtZmlsZVwiKTtcbmV4cG9ydHMuUG16RmlsZSA9IG1vZGVsX2ZpbGVfMS5QbXpGaWxlO1xuXG59LHtcIi4vbW9kZWwvbW9kZWxcIjo0LFwiLi9zdG9yYWdlL21vZGVsLWZpbGVcIjoxNH1dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgUG16Q29sb3IgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBtekNvbG9yKGMpIHtcbiAgICAgICAgdGhpcy5jID0gYztcbiAgICAgICAgO1xuICAgIH1cbiAgICByZXR1cm4gUG16Q29sb3I7XG59KCkpO1xuZXhwb3J0cy5QbXpDb2xvciA9IFBtekNvbG9yO1xuXG59LHt9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xudmFyIFBtek1ldGFkYXRhID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQbXpNZXRhZGF0YShuYW1lLCBjaXR5TmFtZSwgY291bnRyeU5hbWUsIHZlcnNpb24sIGRlc2NyaXB0aW9uLCBjb21tZW50LCBkZWxheXMpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jaXR5TmFtZSA9IGNpdHlOYW1lO1xuICAgICAgICB0aGlzLmNvdW50cnlOYW1lID0gY291bnRyeU5hbWU7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5jb21tZW50ID0gY29tbWVudDtcbiAgICAgICAgdGhpcy5kZWxheXMgPSBkZWxheXM7XG4gICAgfVxuICAgIHJldHVybiBQbXpNZXRhZGF0YTtcbn0oKSk7XG5leHBvcnRzLlBtek1ldGFkYXRhID0gUG16TWV0YWRhdGE7XG5cbn0se31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbWV0YWRhdGFfMSA9IHJlcXVpcmUoJy4vbWV0YWRhdGEnKTtcbnZhciB0cmFuc3BvcnRfMSA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jyk7XG52YXIgc2NoZW1lXzEgPSByZXF1aXJlKCcuL3NjaGVtZScpO1xudmFyIFBtek1vZGVsID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQbXpNb2RlbChtZXRhZGF0YSkge1xuICAgICAgICB0aGlzLm1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgICAgIHRoaXMudHJhbnNwb3J0cyA9IFtdO1xuICAgICAgICB0aGlzLnNjaGVtZXMgPSBbXTtcbiAgICB9XG4gICAgUG16TW9kZWwuY3JlYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbW9kZWwgPSBuZXcgUG16TW9kZWwobmV3IG1ldGFkYXRhXzEuUG16TWV0YWRhdGEoJ1Vua25vd24nLCBudWxsLCBudWxsLCAnMS4wLjAnLCBudWxsLCBudWxsLCBudWxsKSk7XG4gICAgICAgIG1vZGVsLmFkZFRyYW5zcG9ydCgnTWV0cm8udHJwJywgdHJhbnNwb3J0XzEuUG16VHJhbnNwb3J0VHlwZS5NZXRybyk7XG4gICAgICAgIG1vZGVsLmFkZFNjaGVtZSgnTWV0cm8ubWFwJyk7XG4gICAgICAgIHJldHVybiBtb2RlbDtcbiAgICB9O1xuICAgIFBtek1vZGVsLnByb3RvdHlwZS5nZXRNZXRhZGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YWRhdGE7XG4gICAgfTtcbiAgICBQbXpNb2RlbC5wcm90b3R5cGUuZ2V0U2NoZW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NoZW1lcy5tYXAoZnVuY3Rpb24gKGkpIHsgcmV0dXJuIGkubmFtZTsgfSk7XG4gICAgfTtcbiAgICBQbXpNb2RlbC5wcm90b3R5cGUuYWRkU2NoZW1lID0gZnVuY3Rpb24gKG5hbWUsIG9wdGlvbnMsIGxpbmVzKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IG51bGw7IH1cbiAgICAgICAgaWYgKGxpbmVzID09PSB2b2lkIDApIHsgbGluZXMgPSBudWxsOyB9XG4gICAgICAgIHRoaXMuc2NoZW1lcy5wdXNoKG5ldyBzY2hlbWVfMS5QbXpTY2hlbWUobmFtZSwgbmFtZSwgb3B0aW9ucyB8fCB7fSwgbGluZXMgfHwgW10pKTtcbiAgICB9O1xuICAgIFBtek1vZGVsLnByb3RvdHlwZS5yZW1vdmVTY2hlbWUgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB0aGlzLnNjaGVtZXMuc3BsaWNlKHRoaXMuc2NoZW1lcy5pbmRleE9mKHRoaXMuZ2V0U2NoZW1lKG5hbWUpKSk7XG4gICAgfTtcbiAgICBQbXpNb2RlbC5wcm90b3R5cGUuZ2V0U2NoZW1lID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgdmFyIGl0ZW1zID0gdGhpcy5zY2hlbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkgeyByZXR1cm4gaS5uYW1lID09PSBuYW1lOyB9KTtcbiAgICAgICAgaWYgKGl0ZW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbXNbMF07XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2NoZW1lIFwiICsgbmFtZSArIFwiIG5vdCBmb3VuZFwiKTtcbiAgICB9O1xuICAgIFBtek1vZGVsLnByb3RvdHlwZS5nZXRUcmFuc3BvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50cmFuc3BvcnRzLm1hcChmdW5jdGlvbiAoaSkgeyByZXR1cm4gaS5uYW1lOyB9KTtcbiAgICB9O1xuICAgIFBtek1vZGVsLnByb3RvdHlwZS5hZGRUcmFuc3BvcnQgPSBmdW5jdGlvbiAobmFtZSwgdHlwZSwgbGluZXMsIHRyYW5zZmVycykge1xuICAgICAgICBpZiAobGluZXMgPT09IHZvaWQgMCkgeyBsaW5lcyA9IG51bGw7IH1cbiAgICAgICAgaWYgKHRyYW5zZmVycyA9PT0gdm9pZCAwKSB7IHRyYW5zZmVycyA9IG51bGw7IH1cbiAgICAgICAgdGhpcy50cmFuc3BvcnRzLnB1c2gobmV3IHRyYW5zcG9ydF8xLlBtelRyYW5zcG9ydChuYW1lLCBuYW1lLCB0eXBlLCBsaW5lcyB8fCB7fSwgdHJhbnNmZXJzIHx8IHt9KSk7XG4gICAgfTtcbiAgICBQbXpNb2RlbC5wcm90b3R5cGUucmVtb3ZlVHJhbnNwb3J0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgdGhpcy50cmFuc3BvcnRzLnNwbGljZSh0aGlzLnRyYW5zcG9ydHMuaW5kZXhPZih0aGlzLmdldFRyYW5zcG9ydChuYW1lKSkpO1xuICAgIH07XG4gICAgUG16TW9kZWwucHJvdG90eXBlLmdldFRyYW5zcG9ydCA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHZhciBpdGVtcyA9IHRoaXMudHJhbnNwb3J0cy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsgcmV0dXJuIGkubmFtZSA9PT0gbmFtZTsgfSk7XG4gICAgICAgIGlmIChpdGVtcykge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1zWzBdO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyYW5zcG9ydCBcIiArIG5hbWUgKyBcIiBub3QgZm91bmRcIik7XG4gICAgfTtcbiAgICByZXR1cm4gUG16TW9kZWw7XG59KCkpO1xuZXhwb3J0cy5QbXpNb2RlbCA9IFBtek1vZGVsO1xuXG59LHtcIi4vbWV0YWRhdGFcIjozLFwiLi9zY2hlbWVcIjo4LFwiLi90cmFuc3BvcnRcIjoxMX1dLDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgUG16UG9pbnQgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBtelBvaW50KHgsIHkpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICB9XG4gICAgUG16UG9pbnQucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnggPT09IDAgJiYgdGhpcy55ID09PSAwO1xuICAgIH07XG4gICAgcmV0dXJuIFBtelBvaW50O1xufSgpKTtcbmV4cG9ydHMuUG16UG9pbnQgPSBQbXpQb2ludDtcblxufSx7fV0sNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG5cInVzZSBzdHJpY3RcIjtcbnZhciBQbXpSZWN0ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQbXpSZWN0KHgsIHksIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICB9XG4gICAgUG16UmVjdC5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueCA9PT0gMCAmJiB0aGlzLnkgPT09IDAgJiYgdGhpcy53aWR0aCA9PT0gMCAmJiB0aGlzLmhlaWdodCA9PT0gMDtcbiAgICB9O1xuICAgIHJldHVybiBQbXpSZWN0O1xufSgpKTtcbmV4cG9ydHMuUG16UmVjdCA9IFBtelJlY3Q7XG5cbn0se31dLDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgUG16U2NoZW1lTGluZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUG16U2NoZW1lTGluZShpZCwgbmFtZSwgY29sb3IsIGxhYmVsQ29sb3IsIGxhYmVsQmFja2dyb3VuZENvbG9yLCBjb29yZHMsIHJlY3RzLCBoZWlnaHRzLCByZWN0LCByZWN0czIsIHNwbGluZXMsIHZpc2libGUpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgICAgIHRoaXMubGFiZWxDb2xvciA9IGxhYmVsQ29sb3I7XG4gICAgICAgIHRoaXMubGFiZWxCYWNrZ3JvdW5kQ29sb3IgPSBsYWJlbEJhY2tncm91bmRDb2xvcjtcbiAgICAgICAgdGhpcy5jb29yZHMgPSBjb29yZHM7XG4gICAgICAgIHRoaXMucmVjdHMgPSByZWN0cztcbiAgICAgICAgdGhpcy5oZWlnaHRzID0gaGVpZ2h0cztcbiAgICAgICAgdGhpcy5yZWN0ID0gcmVjdDtcbiAgICAgICAgdGhpcy5yZWN0czIgPSByZWN0czI7XG4gICAgICAgIHRoaXMuc3BsaW5lcyA9IHNwbGluZXM7XG4gICAgICAgIHRoaXMudmlzaWJsZSA9IHZpc2libGU7XG4gICAgfVxuICAgIHJldHVybiBQbXpTY2hlbWVMaW5lO1xufSgpKTtcbmV4cG9ydHMuUG16U2NoZW1lTGluZSA9IFBtelNjaGVtZUxpbmU7XG5cbn0se31dLDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgUG16U2NoZW1lID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQbXpTY2hlbWUoaWQsIG5hbWUsIG9wdGlvbnMsIGxpbmVzKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5saW5lcyA9IGxpbmVzO1xuICAgIH1cbiAgICByZXR1cm4gUG16U2NoZW1lO1xufSgpKTtcbmV4cG9ydHMuUG16U2NoZW1lID0gUG16U2NoZW1lO1xuXG59LHt9XSw5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xudmFyIFBtelNwbGluZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUG16U3BsaW5lKGxpbmUsIHNyYywgZHN0LCBwb2ludHMsIGlzU21vb3RoKSB7XG4gICAgICAgIHRoaXMubGluZSA9IGxpbmU7XG4gICAgICAgIHRoaXMuc3JjID0gc3JjO1xuICAgICAgICB0aGlzLmRzdCA9IGRzdDtcbiAgICAgICAgdGhpcy5wb2ludHMgPSBwb2ludHM7XG4gICAgICAgIHRoaXMuaXNTbW9vdGggPSBpc1Ntb290aDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBQbXpTcGxpbmU7XG59KCkpO1xuZXhwb3J0cy5QbXpTcGxpbmUgPSBQbXpTcGxpbmU7XG5cbn0se31dLDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xudmFyIFBtelRpbWUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBtelRpbWUobWludXRlcywgc2Vjb25kcykge1xuICAgICAgICB0aGlzLm1pbnV0ZXMgPSBtaW51dGVzO1xuICAgICAgICB0aGlzLnNlY29uZHMgPSBzZWNvbmRzO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFBtelRpbWU7XG59KCkpO1xuZXhwb3J0cy5QbXpUaW1lID0gUG16VGltZTtcblxufSx7fV0sMTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG4oZnVuY3Rpb24gKFBtelRyYW5zcG9ydFR5cGUpIHtcbiAgICBQbXpUcmFuc3BvcnRUeXBlW1BtelRyYW5zcG9ydFR5cGVbXCJNZXRyb1wiXSA9IDBdID0gXCJNZXRyb1wiO1xuICAgIFBtelRyYW5zcG9ydFR5cGVbUG16VHJhbnNwb3J0VHlwZVtcIkJ1c1wiXSA9IDFdID0gXCJCdXNcIjtcbn0pKGV4cG9ydHMuUG16VHJhbnNwb3J0VHlwZSB8fCAoZXhwb3J0cy5QbXpUcmFuc3BvcnRUeXBlID0ge30pKTtcbnZhciBQbXpUcmFuc3BvcnRUeXBlID0gZXhwb3J0cy5QbXpUcmFuc3BvcnRUeXBlO1xudmFyIFBtelRyYW5zcG9ydCA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUG16VHJhbnNwb3J0KGlkLCBuYW1lLCB0eXBlLCBsaW5lcywgdHJhbnNmZXJzKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5saW5lcyA9IGxpbmVzO1xuICAgICAgICB0aGlzLnRyYW5zZmVycyA9IHRyYW5zZmVycztcbiAgICB9XG4gICAgcmV0dXJuIFBtelRyYW5zcG9ydDtcbn0oKSk7XG5leHBvcnRzLlBtelRyYW5zcG9ydCA9IFBtelRyYW5zcG9ydDtcblxufSx7fV0sMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBmb3JtYXRJbmlUZXh0KGluaSkge1xuICAgIHZhciBsaW5lcyA9IFtdO1xuICAgIE9iamVjdC5rZXlzKGluaSkuZm9yRWFjaChmdW5jdGlvbiAoc2VjdGlvbktleSkge1xuICAgICAgICBsaW5lcy5wdXNoKCdbJyArIHNlY3Rpb25LZXkgKyAnXScpO1xuICAgICAgICBPYmplY3Qua2V5cyhpbmlbc2VjdGlvbktleV0pLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlS2V5KSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbmlbc2VjdGlvbktleV1bdmFsdWVLZXldO1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2godmFsdWVLZXkgKyAnPScgKyB2YWx1ZVtpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGluZXMucHVzaCh2YWx1ZUtleSArICc9JyArIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGxpbmVzLnJlZHVjZShmdW5jdGlvbiAoYSwgYykgeyByZXR1cm4gYSArICdcXG4nICsgYzsgfSk7XG59XG5leHBvcnRzLmZvcm1hdEluaVRleHQgPSBmb3JtYXRJbmlUZXh0O1xuZnVuY3Rpb24gcGFyc2VJbmlUZXh0KHRleHQpIHtcbiAgICB2YXIgcmVnZXggPSB7XG4gICAgICAgIHNlY3Rpb246IC9eXFxzKlxcW1xccyooW15cXF1dKilcXHMqXFxdXFxzKiQvLFxuICAgICAgICBwYXJhbTogL15cXHMqKFtcXHdcXC5cXC1cXF9dKylcXHMqPVxccyooLio/KVxccyokLyxcbiAgICAgICAgY29tbWVudDogL15cXHMqOy4qJC9cbiAgICB9O1xuICAgIHZhciB2YWx1ZSA9IHt9O1xuICAgIHZhciBsaW5lcyA9IHRleHQuc3BsaXQoL1xcclxcbnxcXHJ8XFxuLyk7XG4gICAgdmFyIHNlY3Rpb24gPSBudWxsO1xuICAgIGxpbmVzLmZvckVhY2goZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgaWYgKHJlZ2V4LmNvbW1lbnQudGVzdChsaW5lKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlZ2V4LnBhcmFtLnRlc3QobGluZSkpIHtcbiAgICAgICAgICAgIHZhciBtYXRjaCA9IGxpbmUubWF0Y2gocmVnZXgucGFyYW0pO1xuICAgICAgICAgICAgaWYgKHNlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFZhbHVlID0gdmFsdWVbc2VjdGlvbl1bbWF0Y2hbMV1dO1xuICAgICAgICAgICAgICAgIGlmICghY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlW3NlY3Rpb25dW21hdGNoWzFdXSA9IG1hdGNoWzJdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAoY3VycmVudFZhbHVlKSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW3NlY3Rpb25dW21hdGNoWzFdXSA9IFtjdXJyZW50VmFsdWUsIG1hdGNoWzJdXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW3NlY3Rpb25dW21hdGNoWzFdXS5wdXNoKG1hdGNoWzJdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlW21hdGNoWzFdXSA9IG1hdGNoWzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlZ2V4LnNlY3Rpb24udGVzdChsaW5lKSkge1xuICAgICAgICAgICAgdmFyIG1hdGNoID0gbGluZS5tYXRjaChyZWdleC5zZWN0aW9uKTtcbiAgICAgICAgICAgIHZhbHVlW21hdGNoWzFdXSA9IHt9O1xuICAgICAgICAgICAgc2VjdGlvbiA9IG1hdGNoWzFdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGxpbmUubGVuZ3RoID09IDAgJiYgc2VjdGlvbikge1xuICAgICAgICAgICAgc2VjdGlvbiA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgO1xuICAgIH0pO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydHMucGFyc2VJbmlUZXh0ID0gcGFyc2VJbmlUZXh0O1xuXG59LHt9XSwxMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG5cInVzZSBzdHJpY3RcIjtcbnZhciBtZXRhZGF0YV8xID0gcmVxdWlyZSgnLi4vbW9kZWwvbWV0YWRhdGEnKTtcbmZ1bmN0aW9uIGxvYWQoaW5pKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBpbmkuT3B0aW9ucztcbiAgICB2YXIgZGVsYXlOYW1lcyA9IChvcHRpb25zWydEZWxheU5hbWVzJ10gfHwgJycpLnNwbGl0KCdcXG4nKTtcbiAgICByZXR1cm4gbmV3IG1ldGFkYXRhXzEuUG16TWV0YWRhdGEob3B0aW9ucy5OYW1lLCBvcHRpb25zLkNpdHlOYW1lLCBvcHRpb25zLkNvdW50cnksIG9wdGlvbnMuTmVlZFZlcnNpb24sIG9wdGlvbnMuTWFwQXV0aG9ycy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGMpIHsgcmV0dXJuIGEgKyAnXFxuJyArIGM7IH0pLCBvcHRpb25zWydDb21tZW50J10sIGRlbGF5TmFtZXMpO1xufVxuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmZ1bmN0aW9uIHNhdmUobWV0YWRhdGEpIHtcbiAgICB2YXIgaW5pID0ge1xuICAgICAgICBPcHRpb25zOiB7XG4gICAgICAgICAgICBOYW1lOiBtZXRhZGF0YS5uYW1lLFxuICAgICAgICAgICAgQ2l0eU5hbWU6IG1ldGFkYXRhLmNpdHlOYW1lIHx8ICdVbmtub3duJyxcbiAgICAgICAgICAgIENvdW50cnk6IG1ldGFkYXRhLmNvdW50cnlOYW1lIHx8ICdVbmtub3duJyxcbiAgICAgICAgICAgIE5lZWRWZXJzaW9uOiBtZXRhZGF0YS52ZXJzaW9uIHx8ICcxLjAuMCcsXG4gICAgICAgICAgICBNYXBBdXRob3JzOiAobWV0YWRhdGEuZGVzY3JpcHRpb24gfHwgJycpLnNwbGl0KCdcXG4nKVxuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAobWV0YWRhdGEuY29tbWVudCkge1xuICAgICAgICBpbmkuT3B0aW9ucy5Db21tZW50ID0gbWV0YWRhdGEuY29tbWVudDtcbiAgICB9XG4gICAgaWYgKG1ldGFkYXRhLmRlbGF5cykge1xuICAgICAgICBpbmkuT3B0aW9ucy5EZWxheU5hbWVzID0gbWV0YWRhdGEuZGVsYXlzLnJlZHVjZShmdW5jdGlvbiAoYSwgYykgeyByZXR1cm4gYSArICcsJyArIGM7IH0pO1xuICAgIH1cbiAgICByZXR1cm4gaW5pO1xufVxuZXhwb3J0cy5zYXZlID0gc2F2ZTtcblxufSx7XCIuLi9tb2RlbC9tZXRhZGF0YVwiOjN9XSwxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vdHlwaW5ncy9qc3ppcC5kLnRzXCIgLz5cblwidXNlIHN0cmljdFwiO1xudmFyIEpTWmlwID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ0pTWmlwJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydKU1ppcCddIDogbnVsbCk7XG52YXIgUG16VXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgUG16TWV0YWRhdGFGaWxlID0gcmVxdWlyZSgnLi9tZXRhZGF0YS1maWxlJyk7XG52YXIgUG16VHJhbnNwb3J0RmlsZSA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0LWZpbGUnKTtcbnZhciBQbXpTY2hlbWVGaWxlID0gcmVxdWlyZSgnLi9zY2hlbWUtZmlsZScpO1xudmFyIEluaUZpbGUgPSByZXF1aXJlKCcuL2luaS1maWxlJyk7XG52YXIgbW9kZWxfMSA9IHJlcXVpcmUoJy4uL21vZGVsL21vZGVsJyk7XG5mdW5jdGlvbiBlbmRzV2l0aCh0ZXh0LCBzdWZmaXgpIHtcbiAgICBpZiAoIXRleHQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGV4dC5pbmRleE9mKHN1ZmZpeCwgdGV4dC5sZW5ndGggLSBzdWZmaXgubGVuZ3RoKSAhPT0gLTE7XG59XG47XG5mdW5jdGlvbiBlbnVtZXJhdGVFbnRyaWVzKHppcCwgZXh0LCBjYWxsYmFjaykge1xuICAgIGZvciAodmFyIGVudHJ5TmFtZSBpbiB6aXAuZmlsZXMpIHtcbiAgICAgICAgdmFyIHppcEVudHJ5ID0gemlwLmZpbGVzW2VudHJ5TmFtZV07XG4gICAgICAgIGlmIChlbmRzV2l0aChlbnRyeU5hbWUsIGV4dCkpIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayhlbnRyeU5hbWUsIHppcEVudHJ5KSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGVudW1lcmF0ZUluaUVudHJpZXMoemlwLCBleHQsIGNhbGxiYWNrKSB7XG4gICAgZW51bWVyYXRlRW50cmllcyh6aXAsIGV4dCwgZnVuY3Rpb24gKG5hbWUsIGVudHJ5KSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhuYW1lLCBJbmlGaWxlLnBhcnNlSW5pVGV4dChQbXpVdGlscy5kZWNvZGVXaW5kb3dzMTI1MShlbnRyeS5hc1VpbnQ4QXJyYXkoKSkpKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIG9wZW5aaXAoZmlsZSkge1xuICAgIGlmIChbJ2FwcGxpY2F0aW9uL3gtemlwLWNvbXByZXNzZWQnLCAnYXBwbGljYXRpb24vemlwJ10uaW5kZXhPZihmaWxlLnR5cGUpID09IC0xKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgZmlsZSB0eXBlICcgKyBmaWxlLnR5cGUgKyAnIGZvciBQTVogbWFwJyk7XG4gICAgfVxuICAgIHZhciB6aXAgPSBuZXcgSlNaaXAoZmlsZS5jb250ZW50KTtcbiAgICBlbnVtZXJhdGVFbnRyaWVzKHppcCwgJy5wbXonLCBmdW5jdGlvbiAobmFtZSwgZW50cnkpIHtcbiAgICAgICAgemlwID0gbmV3IEpTWmlwKGVudHJ5LmFzQXJyYXlCdWZmZXIoKSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICAgIHJldHVybiB6aXA7XG59XG52YXIgUG16RmlsZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUG16RmlsZSgpIHtcbiAgICB9XG4gICAgUG16RmlsZS5sb2FkID0gZnVuY3Rpb24gKGZpbGUpIHtcbiAgICAgICAgdmFyIHppcCA9IG9wZW5aaXAoZmlsZSk7XG4gICAgICAgIHZhciBtb2RlbCA9IG51bGw7XG4gICAgICAgIGVudW1lcmF0ZUluaUVudHJpZXMoemlwLCAnLmN0eScsIGZ1bmN0aW9uIChuYW1lLCBpbmkpIHtcbiAgICAgICAgICAgIG1vZGVsID0gbmV3IG1vZGVsXzEuUG16TW9kZWwoUG16TWV0YWRhdGFGaWxlLmxvYWQoaW5pKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIW1vZGVsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGZpbGUgZm9ybWF0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgZW51bWVyYXRlSW5pRW50cmllcyh6aXAsICcudHJwJywgZnVuY3Rpb24gKG5hbWUsIGluaSkge1xuICAgICAgICAgICAgdmFyIHRyYW5zcG9ydCA9IFBtelRyYW5zcG9ydEZpbGUubG9hZChpbmksIG5hbWUsIG1vZGVsLmdldE1ldGFkYXRhKCkpO1xuICAgICAgICAgICAgbW9kZWwuYWRkVHJhbnNwb3J0KHRyYW5zcG9ydC5uYW1lLCB0cmFuc3BvcnQub3B0aW9ucywgdHJhbnNwb3J0LmxpbmVzLCB0cmFuc3BvcnQudHJhbnNmZXJzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGVudW1lcmF0ZUluaUVudHJpZXMoemlwLCAnLm1hcCcsIGZ1bmN0aW9uIChuYW1lLCBpbmkpIHtcbiAgICAgICAgICAgIHZhciBzY2hlbWUgPSBQbXpTY2hlbWVGaWxlLmxvYWQoaW5pLCBuYW1lLCBtb2RlbCk7XG4gICAgICAgICAgICBtb2RlbC5hZGRTY2hlbWUoc2NoZW1lLm5hbWUsIHNjaGVtZS5vcHRpb25zLCBzY2hlbWUubGluZXMpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1vZGVsO1xuICAgIH07XG4gICAgUG16RmlsZS5zYXZlID0gZnVuY3Rpb24gKGZpbGUsIG1vZGVsKSB7XG4gICAgICAgIHZhciB6aXAgPSBvcGVuWmlwKGZpbGUpO1xuICAgICAgICB2YXIgbWV0YUluaSA9IFBtek1ldGFkYXRhRmlsZS5zYXZlKG1vZGVsLm1ldGFkYXRhKTtcbiAgICAgICAgdmFyIG1ldGFUZXh0ID0gSW5pRmlsZS5mb3JtYXRJbmlUZXh0KG1ldGFJbmkpO1xuICAgICAgICB2YXIgbWV0YUVuY29kZWQgPSBQbXpVdGlscy5lbmNvZGVXaW5kb3dzMTI1MShtZXRhVGV4dCk7XG4gICAgICAgIHppcC5maWxlKG1vZGVsLm1ldGFkYXRhLm5hbWUgKyAnLmN0eScsIG1ldGFFbmNvZGVkKTtcbiAgICAgICAgZmlsZS5jb250ZW50ID0gemlwLmdlbmVyYXRlKHsgdHlwZTogJ2FycmF5YnVmZmVyJyB9KTtcbiAgICB9O1xuICAgIHJldHVybiBQbXpGaWxlO1xufSgpKTtcbmV4cG9ydHMuUG16RmlsZSA9IFBtekZpbGU7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxufSx7XCIuLi9tb2RlbC9tb2RlbFwiOjQsXCIuL2luaS1maWxlXCI6MTIsXCIuL21ldGFkYXRhLWZpbGVcIjoxMyxcIi4vc2NoZW1lLWZpbGVcIjoxNSxcIi4vdHJhbnNwb3J0LWZpbGVcIjoxNixcIi4vdXRpbHNcIjoxN31dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xudmFyIHNjaGVtZV8xID0gcmVxdWlyZSgnLi4vbW9kZWwvc2NoZW1lJyk7XG52YXIgc2NoZW1lX2xpbmVfMSA9IHJlcXVpcmUoJy4uL21vZGVsL3NjaGVtZS1saW5lJyk7XG52YXIgUG16VXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5mdW5jdGlvbiBsb2FkTWFwT3B0aW9ucyhpbmkpIHtcbiAgICBpZiAoIWluaSkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGltYWdlRmlsZU5hbWU6IGluaVsnSW1hZ2VGaWxlTmFtZSddLFxuICAgICAgICBzdGF0aW9uRGlhbWV0ZXI6IGluaVsnU3RhdGlvbkRpYW1ldGVyJ10sXG4gICAgICAgIGxpbmVXaWR0aDogaW5pWydMaW5lc1dpZHRoJ10sXG4gICAgICAgIHVwcGVyQ2FzZTogaW5pWydVcHBlckNhc2UnXSxcbiAgICAgICAgd29yZFdyYXA6IGluaVsnV29yZFdyYXAnXSxcbiAgICAgICAgaXNWZWN0b3I6IGluaVsnSXNWZWN0b3InXSxcbiAgICAgICAgdHJhbnNwb3J0czogUG16VXRpbHMuYXNBcnJheShpbmlbJ1RyYW5zcG9ydHMnXSksXG4gICAgICAgIGNoZWNrZWRUcmFuc3BvcnRzOiBQbXpVdGlscy5hc0FycmF5KGluaVsnQ2hlY2tlZFRyYW5zcG9ydHMnXSlcbiAgICB9O1xufVxuZnVuY3Rpb24gbG9hZFNwbGluZXMoaW5pKSB7XG4gICAgaWYgKCFpbmkpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICB2YXIgbGluZU5vZGVzID0ge307XG4gICAgZm9yICh2YXIga2V5IGluIGluaSkge1xuICAgICAgICB2YXIgaXRlbSA9IGluaVtrZXldO1xuICAgICAgICB2YXIgc3BsaW5lID0gUG16VXRpbHMuYXNQbXpTcGxpbmUoaXRlbSk7XG4gICAgICAgIGlmICghbGluZU5vZGVzW3NwbGluZS5saW5lXSkge1xuICAgICAgICAgICAgbGluZU5vZGVzW3NwbGluZS5saW5lXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGxpbmVOb2Rlc1tzcGxpbmUubGluZV0ucHVzaChzcGxpbmUpO1xuICAgIH1cbiAgICByZXR1cm4gbGluZU5vZGVzO1xufVxuZnVuY3Rpb24gbG9hZE1hcExpbmVzKGluaSwgbGluZU5vZGVzKSB7XG4gICAgdmFyIGxpbmVzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIGluaSkge1xuICAgICAgICB2YXIgaXRlbSA9IGluaVtrZXldO1xuICAgICAgICBsaW5lcy5wdXNoKG5ldyBzY2hlbWVfbGluZV8xLlBtelNjaGVtZUxpbmUoa2V5LCBrZXksIFBtelV0aWxzLmFzUG16Q29sb3IoaXRlbVsnQ29sb3InXSksIGl0ZW1bJ0xhYmVsc0NvbG9yJ10sIGl0ZW1bJ0xhYmVsc0JDb2xvciddLCBQbXpVdGlscy5hc1BtelBvaW50QXJyYXkoaXRlbVsnQ29vcmRpbmF0ZXMnXSksIFBtelV0aWxzLmFzUG16UmVjdEFycmF5KGl0ZW1bJ1JlY3RzJ10pLCBQbXpVdGlscy5hc0Zsb2F0QXJyYXkoaXRlbVsnSGVpZ2h0cyddKSwgUG16VXRpbHMuYXNQbXpSZWN0KGl0ZW1bJ1JlY3QnXSksIFBtelV0aWxzLmFzUG16UmVjdEFycmF5KGl0ZW1bJ1JlY3RzMiddKSwgbGluZU5vZGVzW2tleV0sIHRydWUpKTtcbiAgICB9XG4gICAgcmV0dXJuIGxpbmVzO1xufVxuZnVuY3Rpb24gZmlsdGVyTGluZVNlY3Rpb25zKGluaSwgbW9kZWwpIHtcbiAgICB2YXIgbGluZU5hbWVzID0gW107XG4gICAgbW9kZWwuZ2V0VHJhbnNwb3J0cygpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShsaW5lTmFtZXMsIE9iamVjdC5rZXlzKG1vZGVsLmdldFRyYW5zcG9ydChrZXkpLmxpbmVzKSk7XG4gICAgfSk7XG4gICAgdmFyIHNlY3Rpb25zID0ge307XG4gICAgZm9yICh2YXIga2V5IGluIGluaSkge1xuICAgICAgICBpZiAobGluZU5hbWVzLmluZGV4T2Yoa2V5KSAhPT0gLTEpIHtcbiAgICAgICAgICAgIHNlY3Rpb25zW2tleV0gPSBpbmlba2V5XTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2VjdGlvbnM7XG59XG5mdW5jdGlvbiBsb2FkKGluaSwgbmFtZSwgbW9kZWwpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGxvYWRNYXBPcHRpb25zKGluaVsnT3B0aW9ucyddKTtcbiAgICB2YXIgc3BsaW5lcyA9IGxvYWRTcGxpbmVzKGluaVsnQWRkaXRpb25hbE5vZGVzJ10pO1xuICAgIHZhciBsaW5lcyA9IGxvYWRNYXBMaW5lcyhmaWx0ZXJMaW5lU2VjdGlvbnMoaW5pLCBtb2RlbCksIHNwbGluZXMpO1xuICAgIHJldHVybiBuZXcgc2NoZW1lXzEuUG16U2NoZW1lKG5hbWUsIG5hbWUsIG9wdGlvbnMsIGxpbmVzKTtcbn1cbmV4cG9ydHMubG9hZCA9IGxvYWQ7XG5mdW5jdGlvbiBzYXZlKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vdCBpbXBsZW1lbnRlZCcpO1xufVxuZXhwb3J0cy5zYXZlID0gc2F2ZTtcblxufSx7XCIuLi9tb2RlbC9zY2hlbWVcIjo4LFwiLi4vbW9kZWwvc2NoZW1lLWxpbmVcIjo3LFwiLi91dGlsc1wiOjE3fV0sMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgdHJhbnNwb3J0XzEgPSByZXF1aXJlKCcuLi9tb2RlbC90cmFuc3BvcnQnKTtcbmZ1bmN0aW9uIGxvYWRUcnBPcHRpb25zKGluaSkge1xuICAgIHJldHVybiB0cmFuc3BvcnRfMS5QbXpUcmFuc3BvcnRUeXBlLk1ldHJvOyAvLyBUT0RPOiBmaXggaXRcbn1cbmZ1bmN0aW9uIGxvYWRUcnBMaW5lcyhjaXR5RGVsYXlzLCBpbmkpIHtcbiAgICB2YXIgbGluZXMgPSB7fTtcbiAgICBmb3IgKHZhciBrZXkgaW4gaW5pKSB7XG4gICAgICAgIHZhciBpdGVtID0gaW5pW2tleV07XG4gICAgICAgIHZhciBkZWxheXMgPSB7fTtcbiAgICAgICAgaWYgKGl0ZW1bJ0RlbGF5cyddKSB7XG4gICAgICAgICAgICB2YXIgZGVsYXlWYWx1ZXMgPSBpdGVtLkRlbGF5cy5zcGxpdCgnLCcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaXR5RGVsYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZGVsYXlzW2NpdHlEZWxheXNbaV1dID0gZGVsYXlWYWx1ZXNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW1bJ0RlbGF5RGF5J10pIHtcbiAgICAgICAgICAgIGRlbGF5c1snRGF5J10gPSBpdGVtLkRlbGF5RGF5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtWydEZWxheU5pZ2h0J10pIHtcbiAgICAgICAgICAgIGRlbGF5c1snTmlnaHQnXSA9IGl0ZW0uRGVsYXlOaWdodDtcbiAgICAgICAgfVxuICAgICAgICBsaW5lc1tpdGVtLk5hbWVdID0ge1xuICAgICAgICAgICAgc2VjdGlvbk5hbWU6IGtleSxcbiAgICAgICAgICAgIGxpbmVNYXA6IGl0ZW1bJ0xpbmVNYXAnXSxcbiAgICAgICAgICAgIHN0YXRpb25zOiBpdGVtWydTdGF0aW9ucyddLFxuICAgICAgICAgICAgZHJpdmluZzogaXRlbVsnRHJpdmluZyddLFxuICAgICAgICAgICAgZGVsYXlzOiBkZWxheXNcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGxpbmVzO1xufVxuZnVuY3Rpb24gbG9hZFRycFRyYW5zZmVycyhpbmkpIHtcbiAgICByZXR1cm4gaW5pO1xufVxuZnVuY3Rpb24gZmlsdGVyVHJwTGluZVNlY3Rpb25zKGluaSkge1xuICAgIHZhciBzZWN0aW9ucyA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiBpbmkpIHtcbiAgICAgICAgaWYgKFsnT3B0aW9ucycsICdUcmFuc2ZlcnMnLCAnQWRkaXRpb25hbEluZm8nXS5pbmRleE9mKGtleSkgPT09IC0xKSB7XG4gICAgICAgICAgICBzZWN0aW9uc1trZXldID0gaW5pW2tleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNlY3Rpb25zO1xufVxuZnVuY3Rpb24gbG9hZChpbmksIG5hbWUsIG1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyB0cmFuc3BvcnRfMS5QbXpUcmFuc3BvcnQobmFtZSwgbmFtZSwgbG9hZFRycE9wdGlvbnMoaW5pWydPcHRpb25zJ10gfHwge30pLCBsb2FkVHJwTGluZXMobWV0YWRhdGEuZGVsYXlzLCBmaWx0ZXJUcnBMaW5lU2VjdGlvbnMoaW5pKSksIGxvYWRUcnBUcmFuc2ZlcnMoaW5pWydUcmFuc2ZlcnMnXSB8fCB7fSkpO1xufVxuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmZ1bmN0aW9uIHNhdmUoKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignTm90IGltcGxlbWVudGVkJyk7XG59XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuXG59LHtcIi4uL21vZGVsL3RyYW5zcG9ydFwiOjExfV0sMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGluZ3Mvd2luZG93cy0xMjUxLmQudHNcIiAvPlxuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgd2luZG93czEyNTEgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snd2luZG93czEyNTEnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ3dpbmRvd3MxMjUxJ10gOiBudWxsKTtcbnZhciBwb2ludF8xID0gcmVxdWlyZSgnLi4vbW9kZWwvcG9pbnQnKTtcbnZhciByZWN0XzEgPSByZXF1aXJlKCcuLi9tb2RlbC9yZWN0Jyk7XG52YXIgdGltZV8xID0gcmVxdWlyZSgnLi4vbW9kZWwvdGltZScpO1xudmFyIGNvbG9yXzEgPSByZXF1aXJlKCcuLi9tb2RlbC9jb2xvcicpO1xudmFyIHNwbGluZV8xID0gcmVxdWlyZSgnLi4vbW9kZWwvc3BsaW5lJyk7XG52YXIgY29uc3RhbnRzID0ge1xuICAgIERFRkFVTFRfTUFQX05BTUU6ICdNZXRyby5tYXAnLFxuICAgIERFRkFVTFRfVFJQX05BTUU6ICdNZXRyby50cnAnLFxuICAgIERFRkFVTFRfTElORV9DT0xPUjogJ2JsYWNrJ1xufTtcbmV4cG9ydHMuY29uc3RhbnRzID0gY29uc3RhbnRzO1xuZnVuY3Rpb24gYXNJbnQodGV4dCkge1xuICAgIHJldHVybiB0ZXh0ICYmIHRleHQgIT09ICc/JyA/IHBhcnNlSW50KHRleHQpIDogbnVsbDtcbn1cbmZ1bmN0aW9uIGFzQXJyYXkodGV4dCkge1xuICAgIGlmICghdGV4dClcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIHJldHVybiB0ZXh0LnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtID09PSAnPycgPyBudWxsIDogaXRlbTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuYXNBcnJheSA9IGFzQXJyYXk7XG5mdW5jdGlvbiBhc0ludEFycmF5KHRleHQpIHtcbiAgICByZXR1cm4gYXNBcnJheSh0ZXh0KS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaWYgKCFpdGVtKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHJldHVybiBwYXJzZUludChpdGVtKTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuYXNJbnRBcnJheSA9IGFzSW50QXJyYXk7XG5mdW5jdGlvbiBhc0Zsb2F0QXJyYXkodGV4dCkge1xuICAgIHJldHVybiBhc0FycmF5KHRleHQpLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICBpZiAoIWl0ZW0pXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaXRlbSk7XG4gICAgfSk7XG59XG5leHBvcnRzLmFzRmxvYXRBcnJheSA9IGFzRmxvYXRBcnJheTtcbmZ1bmN0aW9uIGFzUG16UG9pbnRBcnJheSh0ZXh0KSB7XG4gICAgdmFyIHZhbHVlcyA9IGFzSW50QXJyYXkodGV4dCk7XG4gICAgdmFyIHBvaW50cyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgKHZhbHVlcy5sZW5ndGggLSAxKTsgaSArPSAyKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKG5ldyBwb2ludF8xLlBtelBvaW50KHZhbHVlc1tpXSwgdmFsdWVzW2kgKyAxXSkpO1xuICAgIH1cbiAgICByZXR1cm4gcG9pbnRzO1xufVxuZXhwb3J0cy5hc1BtelBvaW50QXJyYXkgPSBhc1BtelBvaW50QXJyYXk7XG5mdW5jdGlvbiBhc1BtelJlY3RBcnJheSh0ZXh0KSB7XG4gICAgdmFyIHZhbHVlcyA9IGFzSW50QXJyYXkodGV4dCk7XG4gICAgdmFyIHJlY3RzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAodmFsdWVzLmxlbmd0aCAtIDMpOyBpICs9IDIpIHtcbiAgICAgICAgcmVjdHMucHVzaChuZXcgcmVjdF8xLlBtelJlY3QodmFsdWVzW2ldLCB2YWx1ZXNbaSArIDFdLCB2YWx1ZXNbaSArIDJdLCB2YWx1ZXNbaSArIDNdKSk7XG4gICAgfVxuICAgIHJldHVybiByZWN0cztcbn1cbmV4cG9ydHMuYXNQbXpSZWN0QXJyYXkgPSBhc1BtelJlY3RBcnJheTtcbmZ1bmN0aW9uIGFzUG16UG9pbnQodGV4dCkge1xuICAgIHZhciB2YWx1ZXMgPSBhc0ludEFycmF5KHRleHQpO1xuICAgIHJldHVybiBuZXcgcG9pbnRfMS5QbXpQb2ludCh2YWx1ZXNbMF0sIHZhbHVlc1sxXSk7XG59XG5leHBvcnRzLmFzUG16UG9pbnQgPSBhc1BtelBvaW50O1xuZnVuY3Rpb24gYXNQbXpSZWN0KHRleHQpIHtcbiAgICB2YXIgdmFsdWVzID0gYXNJbnRBcnJheSh0ZXh0KTtcbiAgICByZXR1cm4gbmV3IHJlY3RfMS5QbXpSZWN0KHZhbHVlc1swXSwgdmFsdWVzWzFdLCB2YWx1ZXNbMl0sIHZhbHVlc1szXSk7XG59XG5leHBvcnRzLmFzUG16UmVjdCA9IGFzUG16UmVjdDtcbmZ1bmN0aW9uIGFzUG16U3BsaW5lKHRleHQpIHtcbiAgICB2YXIgcGFydHMgPSBhc0FycmF5KHRleHQpO1xuICAgIHZhciBsaW5lID0gcGFydHNbMF07XG4gICAgdmFyIHNyYyA9IHBhcnRzWzFdO1xuICAgIHZhciBkc3QgPSBwYXJ0c1syXTtcbiAgICB2YXIgaXNTcGxpbmUgPSBwYXJ0cy5sZW5ndGggJSAyID09PSAwO1xuICAgIHZhciBwb2ludHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMzsgaSA8IChwYXJ0cy5sZW5ndGggLSAxKTsgaSArPSAyKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKG5ldyBwb2ludF8xLlBtelBvaW50KHBhcnNlSW50KHBhcnRzW2ldKSwgcGFyc2VJbnQocGFydHNbaSArIDFdKSkpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IHNwbGluZV8xLlBtelNwbGluZShsaW5lLCBzcmMsIGRzdCwgcG9pbnRzLCBpc1NwbGluZSk7XG59XG5leHBvcnRzLmFzUG16U3BsaW5lID0gYXNQbXpTcGxpbmU7XG5mdW5jdGlvbiBhc1BtelRpbWUodGV4dCkge1xuICAgIGlmICghdGV4dCB8fCAhdGV4dC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBwYXJ0cyA9IHRleHQuc3BsaXQoJy4nKTtcbiAgICByZXR1cm4gbmV3IHRpbWVfMS5QbXpUaW1lKGFzSW50KHBhcnRzWzBdKSwgcGFydHMubGVuZ3RoID09PSAyID8gYXNJbnQocGFydHNbMV0pIDogbnVsbCk7XG59XG5leHBvcnRzLmFzUG16VGltZSA9IGFzUG16VGltZTtcbmZ1bmN0aW9uIGFzUG16Q29sb3IodGV4dCkge1xuICAgIGlmICghdGV4dCB8fCAhdGV4dC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBuZXcgY29sb3JfMS5QbXpDb2xvcihhc0ludCh0ZXh0KSk7XG59XG5leHBvcnRzLmFzUG16Q29sb3IgPSBhc1BtekNvbG9yO1xuZnVuY3Rpb24gZGVjb2RlV2luZG93czEyNTEoYnVmZmVyKSB7XG4gICAgdmFyIGJ5dGVTdHJpbmcgPSAnJztcbiAgICBidWZmZXIuZm9yRWFjaChmdW5jdGlvbiAoYikge1xuICAgICAgICBieXRlU3RyaW5nID0gYnl0ZVN0cmluZyArIFN0cmluZy5mcm9tQ2hhckNvZGUoYik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHdpbmRvd3MxMjUxLmRlY29kZShieXRlU3RyaW5nLCB7ICdtb2RlJzogJ2ZhdGFsJyB9KTtcbn1cbmV4cG9ydHMuZGVjb2RlV2luZG93czEyNTEgPSBkZWNvZGVXaW5kb3dzMTI1MTtcbmZ1bmN0aW9uIGVuY29kZVdpbmRvd3MxMjUxKHRleHQpIHtcbiAgICB2YXIgYXNjaWlFbmNvZGVkVGV4dCA9IHdpbmRvd3MxMjUxLmVuY29kZSh0ZXh0KTtcbiAgICB2YXIgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoYXNjaWlFbmNvZGVkVGV4dC5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXNjaWlFbmNvZGVkVGV4dC5sZW5ndGg7IGkrKykge1xuICAgICAgICBidWZmZXJbaV0gPSBhc2NpaUVuY29kZWRUZXh0LmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBidWZmZXI7XG59XG5leHBvcnRzLmVuY29kZVdpbmRvd3MxMjUxID0gZW5jb2RlV2luZG93czEyNTE7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxufSx7XCIuLi9tb2RlbC9jb2xvclwiOjIsXCIuLi9tb2RlbC9wb2ludFwiOjUsXCIuLi9tb2RlbC9yZWN0XCI6NixcIi4uL21vZGVsL3NwbGluZVwiOjksXCIuLi9tb2RlbC90aW1lXCI6MTB9XX0se30sWzFdKSgxKVxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
